# Prometheus alert rules for energy cost system
groups:
  - name: database_alerts
    rules:
      - alert: DatabaseDown
        expr: up{job="postgres"} == 0
        for: 30s
        labels:
          severity: critical
        annotations:
          summary: "PostgreSQL database is down"
          description: "PostgreSQL database has been down for more than 30 seconds"

      - alert: HighDatabaseConnections
        expr: pg_stat_activity_count{state="active"} > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High number of active database connections"
          description: "Active database connections: {{ $value }}"

      - alert: LowCacheHitRatio
        expr: pg_stat_database_blks_hit / (pg_stat_database_blks_hit + pg_stat_database_blks_read) < 0.9
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Low database cache hit ratio"
          description: "Cache hit ratio is {{ $value | humanizePercentage }}"

  - name: system_alerts
    rules:
      - alert: HighCPUUsage
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 85
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is above 85% for more than 10 minutes"

      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 90
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is above 90%"

  - name: application_alerts
    rules:
      - alert: HighQueueBacklog
        expr: celery_queue_length > 500
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High Celery queue backlog"
          description: "Queue backlog: {{ $value }} tasks"

      - alert: StaleRankingResults
        expr: time() - max(results_lcoe_computed_at_timestamp) > 7776000  # 90 days
        for: 1h
        labels:
          severity: warning
        annotations:
          summary: "Ranking results are stale"
          description: "No ranking results computed in the last 90 days"

      - alert: HighAPIErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.05
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "High API error rate"
          description: "API error rate is {{ $value | humanizePercentage }}"
